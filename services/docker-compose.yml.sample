services:
    postgres:
        build:
            context: .
            dockerfile: postgres.Dockerfile
        container_name: memeDB_postgres
        command:
            [
                "postgres",
                "-c",
                "logging_collector=on",
                "-c",
                "log_destination=jsonlog",
            ]
        environment:
            POSTGRES_USER: postgres
            POSTGRES_PASSWORD: postgres
            POSTGRES_DB: memedb
            PGDATA: /var/lib/postgresql/data/pgdata
        networks:
            - memedb_network
        expose:
            - "5432"
        volumes:
            - postgres_data:/var/lib/postgresql/data
        healthcheck:
            test: ["CMD-SHELL", "pg_isready -U postgres"]
            interval: 5s
            timeout: 5s
            retries: 5
    meme-service:
        build:
            context: .
            dockerfile: meme-service.Dockerfile
        container_name: memeDB_meme-service
        environment:
            - SERVER_PORT=50051
            - DB_HOST=postgres
            - DB_PORT=5432
            - DB_USER=postgres
            - DB_PASSWORD=postgres
            - DB_NAME=memedb
        networks:
            - memedb_network
        expose:
            - "50051"
        depends_on:
            - postgres
        volumes:
            - ./images:/app/images
    gateway:
        build:
            context: .
            dockerfile: gateway.Dockerfile
        container_name: memeDB_gateway
        environment:
            - GRPC_HOST=meme-service
            - GRPC_PORT=50051
            - TOKEN_RATE=100
            - TOKEN_BURST=10
            - JWT_SECRET=use-openssl-rand--base64-128
        networks:
            - memedb_network
        ports:
            - "127.0.0.1:8080:8080"
        depends_on:
            - meme-service
        volumes:
            - ./images:/app/images:ro
            - ./config.json:/app/config.json
    client:
        build:
            context: ../client
            dockerfile: Dockerfile
        container_name: nextjs-client
        ports:
            - "127.0.0.1:3000:3000"
        networks:
            - memedb_network
        environment:
            - NEXT_PUBLIC_API_HOST=http://gateway:8080

volumes:
    postgres_data:

networks:
    memedb_network:
        driver: bridge
